{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./backend/index.js","webpack:///./common/keys.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;ACnEmC;;AAEnC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8CAA8C;AACpE;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,iCAAiC,uCAAuC;AACxE,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,CAAC;;;;;;;;;;;;;;;;AC1GD;;AAEA","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./backend/index.js\");\n","import { CONTENT_SCRIPT_PORT_NAME } from \"../common/keys\";\n\nconst whitelist = [\"storage.googleapis.com\"];\n\nconst ports = {};\n\nfunction getUserToken() {\n  return new Promise((resolve, reject) => {\n    chrome.storage.sync.get([\"_diff_userToken_\"], (result = \"\") => {\n      resolve(Object.keys(result).length === 0 ? \"\" : result);\n    });\n  });\n}\n\nconst registerPort = port => {\n  const id = port.sender.tab.id;\n\n  if (id in ports) {\n    console.warn(\"Overwriting tab id\", id);\n  }\n  ports[id] = port;\n  return port.sender.tab.id;\n};\n\nconst messageListener = tabId => msg => {};\n\nconst removeListener = tabId => () => {\n  if (tabId in ports) {\n    delete ports[tabId];\n  }\n};\n\nconst portForId = tabId => {\n  return ports[tabId];\n};\n\nconst portMessageForTab = (tabId, message) => {\n  const port = portForId(tabId);\n  if (!port) {\n    console.error(\"Unable to post message\");\n    return;\n  }\n  port.postMessage(\n    Object.assign(\n      {},\n      {\n        source: \"@diff/backend\"\n      },\n      message\n    )\n  );\n};\n\nchrome.runtime.onConnect.addListener(port => {\n  if (port.name === CONTENT_SCRIPT_PORT_NAME) {\n    // add me to the ports list\n    const id = registerPort(port);\n    port.onMessage.addListener(messageListener(id));\n    port.onDisconnect.addListener(removeListener(id));\n  }\n});\n\n/**\n * Handles messages from our content scripts\n */\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.source === \"diff\") {\n    switch (request.type) {\n      case \"GET_DOMAIN_LIST\":\n        sendResponse(whitelist);\n        break;\n      case \"GET_AUTH_TOKEN\":\n        getUserToken()\n          .then(sendResponse)\n          .catch(_ => sendResponse(\"error\"));\n        break;\n      default:\n        sendResponse({ err: \"No action found for request\", request });\n    }\n  }\n  return true;\n});\n\n/**\n * Create a context menu items to allow encode/decode\n */\nchrome.runtime.onInstalled.addListener(function() {\n  chrome.contextMenus.create({\n    id: \"log-selection\",\n    title: \"Inspect with diff\",\n    contexts: [\"all\"]\n  });\n});\n\nchrome.contextMenus.onClicked.addListener(async (info, tab) => {\n  console.log(\"clickster\");\n  try {\n    const token = await getUserToken();\n    if (!token) {\n      portMessageForTab(tab.id, { type: \"@diff/AUTHENTICATION_REQUEST\" });\n    } else {\n      console.log(\"logged in\");\n    }\n  } catch (err) {}\n\n  return true;\n});\n","export const CONTENT_SCRIPT_PORT_NAME = \"@diff/portname/contentScript\";\n\nexport const CONTENT_SCRIPT_SOURCE_KEY = \"@diff/content\";\n"],"sourceRoot":""}