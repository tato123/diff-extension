{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./background/handlers.js","webpack:///./background/index.js","webpack:///./background/storage.js","webpack:///./common/actions.js","webpack:///./common/keys.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;AClFkB;AAClB;AACiD;;AAEjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG,WAAW,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;+DAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/DC;AACD;AAC0C;;AAE1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;ACrGD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkB;;AAElB;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;;;;;AC5GD;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,KAAK;;AAE/C;AACA,+BAA+B,WAAW;AAC1C,+BAA+B,WAAW;AAC1C,8BAA8B,WAAW;AACzC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://localhost:9000/js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./background/index.js\");\n","import { ACTIONS } from \"@diff/common/keys\";\nimport * as actionCreator from \"@diff/common/actions\";\nimport { get, set, storeUserToken, getUserToken } from \"./storage\";\n\nconst PREFERENCES = \"_DIFF_PREFERENCES\";\n\nconst handleFetchUserPreferences = (tabId, postMessageToTab) => {\n  get(PREFERENCES)\n    .then(preferences =>\n      postMessageToTab(\n        tabId,\n        actionCreator.fetchUserPreferencesSuccess(preferences)\n      )\n    )\n    .catch(err =>\n      postMessageToTab(\n        tabId,\n        actionCreator.fetchUserPreferencesFailed(err.message)\n      )\n    );\n};\n\nconst handlStoreUserPreferences = (\n  tabId,\n  postMessageToTab,\n  { payload: { preferences } }\n) => {\n  set(PREFERENCES, preferences)\n    .then(() =>\n      postMessageToTab(tabId, actionCreator.storeUserPreferencesSuccess())\n    )\n    .catch(err =>\n      postMessageToTab(\n        tabId,\n        actionCreator.storeUserPreferencesFailed(err.message)\n      )\n    );\n};\n\nconst handleCacheTokenRequest = (tabId, postMessageToTab, action) => {\n  storeUserToken(action.payload.token)\n    .then(() => postMessageToTab(tabId, actionCreator.cacheTokenSuccess()))\n    .catch(() =>\n      postMessageToTab(\n        tabId,\n        actionCreator.cacheTokenFailed(\"Not able to save\")\n      )\n    );\n};\n\nconst handleFetchCacheTokenRequest = (tabId, postMessageToTab, action) => {\n  getUserToken()\n    .then(value =>\n      postMessageToTab(tabId, actionCreator.fetchCacheTokenSuccess(value.token))\n    )\n    .catch(() =>\n      postMessageToTab(\n        tabId,\n        actionCreator.fetchCacheTokenSuccess(\"No token available\")\n      )\n    );\n};\n\nexport default {\n  [ACTIONS.FETCH_USER_PREFERENCES.REQUEST]: handleFetchUserPreferences,\n  [ACTIONS.STORE_USER_PREFERENCES.REQUEST]: handlStoreUserPreferences,\n  [ACTIONS.CACHE_TOKEN.REQUEST]: handleCacheTokenRequest,\n  [ACTIONS.FETCH_CACHE_TOKEN.REQUEST]: handleFetchCacheTokenRequest\n};\n","import {\n  CONTENT_SCRIPT_PORT_NAME,\n  CONTENT_SCRIPT_SOURCE_NAME,\n  BACKGROUND_SCRIPT_PORT_NAME,\n  MESSAGES_FRONTEND_SOURCE\n} from \"@diff/common/keys\";\nimport handlers from \"./handlers\";\nimport { runRequest, composeRemoteAction } from \"@diff/common/actions\";\n\nconst ports = {};\n\nconst registerPort = port => {\n  const id = port.sender.tab.id;\n\n  if (id in ports) {\n    console.warn(\"Overwriting tab id\", id);\n  }\n  ports[id] = port;\n  return port.sender.tab.id;\n};\n\nconst messageListener = tabId => msg => {\n  const postDestContentScript = postMessageToTabWithDestination(\n    CONTENT_SCRIPT_SOURCE_NAME\n  );\n  const postDestFrontend = postMessageToTabWithDestination(\n    MESSAGES_FRONTEND_SOURCE\n  );\n\n  if (msg.source === CONTENT_SCRIPT_SOURCE_NAME && msg.type in handlers) {\n    handlers[msg.type](tabId, postDestContentScript, msg);\n  } else if (msg.source === MESSAGES_FRONTEND_SOURCE && msg.type in handlers) {\n    handlers[msg.type](tabId, postDestFrontend, msg);\n  } else {\n    postDestContentScript(tabId, {\n      err: \"No action found for request\"\n    });\n  }\n};\n\nconst removeListener = tabId => () => {\n  if (tabId in ports) {\n    delete ports[tabId];\n  }\n};\n\nconst portForId = tabId => {\n  return ports[tabId];\n};\n\n/**\n * Allows us to message a particular Tab\n * @param {*} tabId\n * @param {*} message\n */\nconst postMessageToTab = (tabId, message) => {\n  postMessageToTabWithDestination(CONTENT_SCRIPT_SOURCE_NAME)(tabId, message);\n};\n\n/**\n * Allows us to message a particular Tab\n * @param {*} tabId\n * @param {*} message\n */\nconst postMessageToTabWithDestination = destination => (tabId, message) => {\n  const port = portForId(tabId);\n  if (!port) {\n    console.error(\"Unable to post message\");\n    return;\n  }\n  port.postMessage(\n    composeRemoteAction(message, BACKGROUND_SCRIPT_PORT_NAME, destination)\n  );\n};\n\n/**\n * Handle our initial connection from content scripts\n */\nchrome.runtime.onConnect.addListener(port => {\n  if (port.name === CONTENT_SCRIPT_PORT_NAME) {\n    // add me to the ports list\n    const id = registerPort(port);\n    port.onMessage.addListener(messageListener(id));\n    port.onDisconnect.addListener(removeListener(id));\n  }\n});\n\n/**\n * Create a context menu items to allow encode/decode\n */\nchrome.runtime.onInstalled.addListener(() => {\n  chrome.contextMenus.create({\n    id: \"log-selection\",\n    title: \"Inspect with diff\",\n    contexts: [\"all\"]\n  });\n});\n\nchrome.contextMenus.onClicked.addListener(async (info, tab) => {\n  postMessageToTab(tab.id, runRequest());\n  return true;\n});\n","export const USER_TOKEN_KEY = \"token\";\nexport const getUserToken = () => get(USER_TOKEN_KEY);\nexport const storeUserToken = token => set(USER_TOKEN_KEY, token);\n\nexport const get = key => {\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.get([key], result => {\n      resolve(Object.keys(result).length === 0 ? null : result);\n    });\n  });\n};\n\nexport const set = (key, value) => {\n  const record = { [key]: value };\n  return new Promise((resolve, reject) => {\n    chrome.storage.local.set(record, () => {\n      resolve();\n    });\n  });\n};\n","import { ACTIONS } from \"./keys\";\n\nexport const composeRemoteAction = (action, source, dest) =>\n  Object.assign(\n    {},\n    {\n      source,\n      dest\n    },\n    action\n  );\n\n// -------------------------------------------------------\n// User actions\n// -------------------------------------------------------\n\nexport const runRequest = () => ({\n  type: ACTIONS.RUN_REQUEST.REQUEST\n});\n\n// -------------------------------------------------------\n// User actions\n// -------------------------------------------------------\n\nexport const fetchUserPreferences = () => ({\n  type: ACTIONS.FETCH_USER_PREFERENCES.REQUEST\n});\n\nexport const fetchUserPreferencesSuccess = preferences => ({\n  type: ACTIONS.FETCH_USER_PREFERENCES.SUCCESS,\n  payload: {\n    preferences: {\n      ...preferences\n    }\n  }\n});\n\nexport const fetchUserPreferencesFailed = err => ({\n  type: ACTIONS.FETCH_USER_PREFERENCES.FAILED,\n  meta: {\n    err\n  }\n});\n\nexport const storeUserPreferencesSuccess = () => ({\n  type: ACTIONS.STORE_USER_PREFERENCES.SUCCESS,\n  payload: {}\n});\n\nexport const storeUserPreferencesFailed = err => ({\n  type: ACTIONS.STORE_USER_PREFERENCES.FAILED,\n  meta: {\n    err\n  }\n});\n\n// -------------------------------------------------------\n// Token actions\n// -------------------------------------------------------\n\nexport const cacheTokenRequest = token => ({\n  type: ACTIONS.CACHE_TOKEN.REQUEST,\n  payload: {\n    token\n  }\n});\n\nexport const cacheTokenFailed = err => ({\n  type: ACTIONS.CACHE_TOKEN.FAILED,\n  meta: {\n    err\n  }\n});\n\nexport const cacheTokenSuccess = () => ({\n  type: ACTIONS.CACHE_TOKEN.SUCCESS\n});\n\nexport const fetchCacheToken = () => ({\n  type: ACTIONS.FETCH_CACHE_TOKEN.REQUEST\n});\n\nexport const fetchCacheTokenFailed = err => ({\n  type: ACTIONS.FETCH_CACHE_TOKEN.FAILED,\n  meta: {\n    err\n  }\n});\n\nexport const fetchCacheTokenSuccess = token => ({\n  type: ACTIONS.FETCH_CACHE_TOKEN.SUCCESS,\n  payload: {\n    token\n  }\n});\n\nexport const validateCanRunRequest = domain => ({\n  type: ACTIONS.VALIDATE_CAN_RUN.REQUEST,\n  payload: {\n    domain: window.location.hostname\n  }\n});\n\nexport const loginSuccess = token => ({\n  type: ACTIONS.LOGIN.SUCCESS,\n  payload: {\n    token\n  }\n});\n","export const CONTENT_SCRIPT_PORT_NAME = \"@diff/portname/contentScript\";\nexport const CONTENT_SCRIPT_SOURCE_NAME = \"@diff/content\";\nexport const BACKGROUND_SCRIPT_PORT_NAME = \"@diff/background\";\n\nexport const MESSAGES_FRONTEND_SOURCE = \"@diff/frontend\";\nexport const MESSAGES_BACKGROUND_SOURCE = \"@diff/background\";\n\nconst namespacedAction = name => `@diff/${name}`;\n\nconst asyncAction = actionType => ({\n  REQUEST: namespacedAction(`${actionType}/request`),\n  SUCCESS: namespacedAction(`${actionType}/success`),\n  FAILED: namespacedAction(`${actionType}/failed`)\n});\n\nexport const ACTIONS = {\n  AUTHENTICATION: asyncAction(\"authentication\"),\n  FETCH_USER_PREFERENCES: asyncAction(\"FETCH_USER_PREFERENCES\"),\n  STORE_USER_PREFERENCES: asyncAction(\"STORE_USER_PREFERENCES\"),\n  RUN_REQUEST: asyncAction(\"RUN_REQUEST\"),\n  LOGIN: asyncAction(\"LOGIN\"),\n  CACHE_TOKEN: asyncAction(\"CACHE_TOKEN\"),\n  FETCH_CACHE_TOKEN: asyncAction(\"FETCH_CACHE_TOKEN\")\n};\n"],"sourceRoot":""}