defaults: &defaults
  working_directory: ~/app
  docker:
    - image: circleci/node:10.5.0

version: 2
jobs:
  dependencies:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Install Npx
          command: yarn global add npx
      - run:
          name: Install dependencies with yarn workspaces
          command: npx lerna bootstrap
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
            - packages/extension/node_modules
            - packages/api/node_modules
            - packages/shared-components/node_modules
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: "Execute tests"
          command: npx lerna run test
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Build frontend
          command: |
            yarn install
            npx lerna run --scope @diff/extension build
      - run:
          name: Build styles
          command: |
            npx lerna run --scope @diff/shared-components build:styles
      - persist_to_workspace:
          root: packages
          paths:
            - extension/dist/chrome
            - extension/dist/frontend
            - shared-components/styleguide
  deploy-chrome-extension:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: packages
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Upload to webstore
          command: ./node_modules/.bin/webstore upload --source packages/extension/dist/chrome --extension-id $WEBSTORE_EXTENSION_ID --client-id $WEBSTORE_CLIENT_ID --client-secret $WEBSTORE_CLIENT_SECRET --refresh-token $WEBSTORE_REFRESH_TOKEN
      # - run:
      #     name: Publish to webstore
      #     command: ./node_modules/.bin/webstore publish --trusted-testers --extension-id $WEBSTORE_EXTENSION_ID --client-id $WEBSTORE_CLIENT_ID --client-secret $WEBSTORE_CLIENT_SECRET --refresh-token $WEBSTORE_REFRESH_TOKEN
  deploy-frontend:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - attach_workspace:
          at: packages
      - run:
          command: |
            echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
            gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
      - run:
          name: Set project default
          command: gcloud config set project $GCLOUD_PROJECT
      - run:
          name: Deploy to google cloud
          command: |
            gsutil -h "Cache-Control:public, max-age=0" rsync -d -r packages/extension/dist/frontend/ gs://diff-frontend
            gsutil iam ch allUsers:objectViewer gs://diff-frontend
      - run:
          name: Deploy styleguide
          command: |
            gsutil -h "Cache-Control:public, max-age=0" rsync -d -r packages/shared-components/styleguide/ gs://diff-styles
            gsutil iam ch allUsers:objectViewer gs://diff-styles
  deploy-api:
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - checkout
      - run:
          command: |
            echo $CLIENT_SECRET | base64 --decode > ${HOME}/client-secret.json
            gcloud auth activate-service-account --key-file ${HOME}/client-secret.json
      - run:
          name: Set project default
          command: gcloud config set project $GCLOUD_PROJECT
      - run:
          name: Deploy to google cloud
          command: |
            cd packages/api
            gcloud app deploy app.yaml --quiet

workflows:
  version: 2
  build_and_test:
    jobs:
      - dependencies:
          filters:
            tags:
              only: /.*/
      - test:
          requires:
            - dependencies
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-api:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-frontend:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-chrome-extension:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
