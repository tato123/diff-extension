{"version":3,"file":"common.es.js","sources":["../src/types.ts","../src/actions.ts","../src/sources.ts","../src/api/firestore.ts","../src/api/user.js","../src/url.ts","../src/api/comments.js","../src/api/workspace.ts","../src/api/authentication.ts","../src/api/activity.ts","../src/api/invites.js","../src/api/index.js"],"sourcesContent":["import { AnyAction } from \"redux\";\n\nconst namespacedAction = (name: string): string => `@diff/common/${name}`;\n\nexport interface AsyncType {\n  REQUEST: string;\n  SUCCESS: string;\n  FAILED: string;\n}\n\nconst asyncAction = (actionType: string): AsyncType => ({\n  REQUEST: namespacedAction(`${actionType}/request`),\n  SUCCESS: namespacedAction(`${actionType}/success`),\n  FAILED: namespacedAction(`${actionType}/failed`)\n});\n\nexport default {\n  FETCH_USER_PREFERENCES: asyncAction(\"fetchUserPreferences\"),\n  RUN_REQUEST: asyncAction(\"runRequest\"),\n  LOGIN: asyncAction(\"login\"),\n  CACHE_TOKEN: asyncAction(\"cacheToken\"),\n  FETCH_CACHE_TOKEN: asyncAction(\"fetchCacheToken\")\n};\n","import types from \"./types\";\nimport { AnyAction } from \"redux\";\n\nexport interface RemoteAction {\n  source: string;\n  dest: string;\n  action: AnyAction;\n}\n\nexport interface Token {\n  access_token: string;\n  refresh_token: string;\n}\n\nconst composeRemoteAction = (\n  action: AnyAction,\n  source: string,\n  dest: string\n): AnyAction => ({\n  source,\n  dest,\n  ...action\n});\n\n// -------------------------------------------------------\n// User actions\n// -------------------------------------------------------\n\nconst runRequest = () => ({\n  type: types.RUN_REQUEST.REQUEST\n});\n\n// -------------------------------------------------------\n// User actions\n// -------------------------------------------------------\n\ninterface FetchUserRequestAction extends AnyAction {\n  payload: {\n    hostname: string;\n    pathname: string;\n  };\n}\n\nconst fetchUserPreferences = (\n  hostname: string,\n  pathname: string\n): FetchUserRequestAction => ({\n  type: types.FETCH_USER_PREFERENCES.REQUEST,\n  payload: {\n    hostname,\n    pathname\n  }\n});\n\nconst fetchUserPreferencesSuccess = (preferences: Object): AnyAction => ({\n  type: types.FETCH_USER_PREFERENCES.SUCCESS,\n  payload: {\n    preferences: {\n      ...preferences\n    }\n  }\n});\n\nconst fetchUserPreferencesFailed = (error: string): AnyAction => ({\n  type: types.FETCH_USER_PREFERENCES.FAILED,\n  payload: {\n    error\n  }\n});\n\n// -------------------------------------------------------\n// Set cache token actions\n// -------------------------------------------------------\n\nconst cacheTokenRequest = (token: string): AnyAction => ({\n  type: types.CACHE_TOKEN.REQUEST,\n  payload: {\n    token\n  }\n});\n\nconst cacheTokenFailed = (error: string): AnyAction => ({\n  type: types.CACHE_TOKEN.FAILED,\n  payload: {\n    error\n  }\n});\n\nconst cacheTokenSuccess = (): AnyAction => ({\n  type: types.CACHE_TOKEN.SUCCESS\n});\n\n// -------------------------------------------------------\n// get cache token actions\n// -------------------------------------------------------\n\nconst fetchCacheToken = (): AnyAction => ({\n  type: types.FETCH_CACHE_TOKEN.REQUEST\n});\n\nconst fetchCacheTokenFailed = (error: string): AnyAction => ({\n  type: types.FETCH_CACHE_TOKEN.FAILED,\n  payload: {\n    error\n  }\n});\n\nconst fetchCacheTokenSuccess = (token: diffTypes.Token): AnyAction => ({\n  type: types.FETCH_CACHE_TOKEN.SUCCESS,\n  payload: {\n    token\n  }\n});\n\nexport default {\n  composeRemoteAction,\n  runRequest,\n  fetchUserPreferences,\n  fetchUserPreferencesSuccess,\n  fetchUserPreferencesFailed,\n\n  cacheTokenRequest,\n  cacheTokenFailed,\n  cacheTokenSuccess,\n  fetchCacheToken,\n  fetchCacheTokenFailed,\n  fetchCacheTokenSuccess\n};\n","const CONTENT_SCRIPT_PORT_NAME = \"@diff/portname/contentScript\";\nconst CONTENT_SCRIPT_SOURCE_NAME = \"@diff/content\";\nconst BACKGROUND_SCRIPT_PORT_NAME = \"@diff/background\";\nconst MESSAGES_FRONTEND_SOURCE = \"@diff/frontend\";\nconst MESSAGES_BACKGROUND_SOURCE = \"@diff/background\";\n\nexport default {\n  CONTENT_SCRIPT_PORT_NAME,\n  CONTENT_SCRIPT_SOURCE_NAME,\n  BACKGROUND_SCRIPT_PORT_NAME,\n  MESSAGES_FRONTEND_SOURCE,\n  MESSAGES_BACKGROUND_SOURCE\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n/**\n * Handles initializion that is required for our firebase application\n */\nexport const initializeFirestore = (): firebase.firestore.Firestore => {\n  console.log(\"[plugin - firebase] initializing connection\");\n\n  // connect to firebase\n  const config = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.FIREBASE_DATABASE_URL,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_SENDER_ID\n  };\n  console.log(firebase);\n  firebase.initializeApp(config);\n\n  const firestore = firebase.firestore();\n  const settings = { timestampsInSnapshots: true };\n  firestore.settings(settings);\n\n  return firestore;\n};\n","import \"firebase/auth\";\n\nimport { Observable } from \"rxjs\";\n\nexport default db => {\n  const userRef = db.collection(\"users\");\n\n  const user$ = uid => {\n    return Observable.create(observer => {\n      if (uid == null || uid === undefined) {\n        observer.error(\"uid cannot be null\");\n        observer.complete();\n        return;\n      }\n\n      const unsubscribe = userRef.doc(uid).onSnapshot(doc => {\n        const data = doc.data();\n        observer.next(data);\n      });\n\n      return unsubscribe;\n    });\n  };\n\n  const getUser = uid => {\n    return Observable.create(observer => {\n      db.collection(\"users\")\n        .doc(uid)\n        .get()\n        .then(doc => {\n          if (!doc.exists) {\n            observer.error(\"no user\");\n          } else {\n            observer.next(doc.data());\n          }\n        })\n        .catch(err => {\n          observer.error(err.message);\n        })\n        .finally(() => {\n          observer.complete();\n        });\n    });\n  };\n\n  return {\n    user$,\n    getUser\n  };\n};\n","const normalizeUrl = require(\"normalize-url\");\nexport const getLocationURL = () => {\n  const url = normalizeUrl(window.location.href);\n\n  return new URL(url);\n};\n","import { Observable } from \"rxjs\";\nimport _ from \"lodash-es\";\nimport \"firebase/storage\";\nimport { getLocationURL } from \"../url\";\n\nexport default db => {\n  const eventsRef = db.collection(\"events\");\n  const commentsRef = eventsRef.where(\"type\", \"==\", \"comment\");\n\n  const comments$ = (uid, workspaceId) => {\n    return Observable.create(observer => {\n      const subject = !_.isNil(workspaceId)\n        ? \"meta.workspaceId\"\n        : \"meta.userId\";\n      const value = !_.isNil(workspaceId) ? workspaceId : uid;\n      const location = getLocationURL();\n\n      const unsubscribe = commentsRef\n        .where(\"url.hostname\", \"==\", location.hostname)\n        .where(\"url.pathname\", \"==\", location.pathname)\n        .where(subject, \"==\", value)\n        .onSnapshot(\n          querySnapshot => {\n            if (!querySnapshot.empty) {\n              querySnapshot.docChanges().forEach(({ doc, type }) => {\n                const data = doc.data();\n                observer.next({ data, type, id: doc.id });\n              });\n            }\n          },\n          err => observer.err(err)\n        );\n\n      return () => {\n        console.log(\"Unsubuscribing from comments\");\n        unsubscribe();\n      };\n    });\n  };\n\n  const uploadFile = async (file, uid) => {\n    const storageRef = db.app.storage().ref(`attachments/${uid}/${file.name}`);\n    const task = storageRef.put(file);\n\n    return new Promise((resolve, reject) => {\n      task.on(\n        \"state_changed\",\n        function progress(snapshot) {\n          // var percentage =\n          //   (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          // console.log(percentage);\n        },\n        function error(error) {\n          reject(error);\n        },\n        function complete() {\n          task.snapshot.ref.getDownloadURL().then(downloadURL => {\n            resolve({ url: downloadURL, name: file.name });\n          });\n        }\n      );\n    });\n  };\n\n  const addNewComment = async (\n    comment,\n    selector,\n    uploadAttachment,\n    uid,\n    workspaceId\n  ) => {\n    if (_.isNil(uid)) {\n      throw new Error(\"UID cannot be undefined\");\n    }\n\n    if (_.isNil(comment)) {\n      throw new Error(\"comment cannot be undefined\");\n    }\n\n    if (_.isNil(selector)) {\n      throw new Error(\"selector cannot be undefined\");\n    }\n\n    const attachments = await Promise.all(\n      uploadAttachment.map(file => uploadFile(file, uid))\n    );\n\n    const location = getLocationURL();\n\n    const record = {\n      comment,\n      selector,\n      type: \"comment\",\n      meta: {\n        userId: uid,\n        created: Date.now()\n      },\n      attachments,\n      url: {\n        hash: location.hash,\n        hostname: location.hostname,\n        href: location.href,\n        origin: location.origin,\n        pathname: location.pathname,\n        port: location.port,\n        protocol: location.protocol,\n        search: location.search\n      }\n    };\n\n    if (workspaceId) {\n      record.meta.workspaceId = workspaceId;\n    }\n\n    const newEvent = eventsRef.doc();\n    await newEvent.set(record);\n    return newEvent.id;\n  };\n\n  return {\n    comments$,\n    uploadFile,\n    addNewComment\n  };\n};\n","import { Observable, Observer } from \"rxjs\";\nimport firebase from \"firebase\";\nimport _ from \"lodash-es\";\n\nexport interface QueryResponse {\n  data: Object | firebase.firestore.DocumentData | undefined;\n  type?: string | undefined;\n  id: string;\n}\n\nexport interface CreateWorkspaceResponse {\n  workspaceId: string;\n}\n\nexport default (db: firebase.firestore.Firestore): Object => {\n  const workspaceRef = db.collection(\"workspace\");\n\n  const workspaces$ = (uid: string): Observable<QueryResponse> => {\n    return Observable.create((observer: Observer<QueryResponse>) => {\n      if (_.isNil(uid)) {\n        observer.error(\"uid cannot be null\");\n        observer.complete();\n        return;\n      }\n\n      const unsubscribe = workspaceRef\n        .where(`users.${uid}.role`, \">\", \"\")\n        .onSnapshot(\n          querySnapshot => {\n            querySnapshot.docChanges().forEach(({ doc, type }) => {\n              const data = doc.data();\n              observer.next({ data, type, id: doc.id });\n            });\n          },\n          err => {\n            observer.error(err);\n          }\n        );\n\n      return unsubscribe;\n    });\n  };\n\n  const workspaceForId$ = (workspaceId: string): Observable<QueryResponse> => {\n    return Observable.create((observer: Observer<QueryResponse>) => {\n      if (_.isNil(workspaceId)) {\n        observer.error(\"workspaceId cannot be null\");\n        observer.complete();\n        return;\n      }\n\n      const unsubscribe = workspaceRef.doc(workspaceId).onSnapshot(\n        doc => {\n          if (doc.exists) {\n            const queryResponse: QueryResponse = {\n              data: doc.data(),\n              id: doc.id\n            };\n\n            observer.next(queryResponse);\n          } else {\n            observer.error(\"document does not exist\");\n          }\n        },\n        err => {\n          observer.error(err);\n        }\n      );\n\n      return unsubscribe;\n    });\n  };\n\n  const getIdToken = async () => {\n    const user = db.app.auth().currentUser;\n    const idToken = user && (await user.getIdToken(true));\n\n    if (_.isNil(idToken)) {\n      throw new Error(\"User Token not retrievable. Is user logged in?\");\n    }\n\n    return idToken;\n  };\n\n  const addCollaborators = async (\n    emails: Array<string>,\n    workspaceId: string\n  ): Promise<Object> => {\n    if (_.isEmpty(emails) || _.isNil(emails)) {\n      throw new Error(\"emails is required\");\n    }\n\n    if (_.isNil(workspaceId)) {\n      throw new Error(\"workspace id is required\");\n    }\n\n    const idToken = await getIdToken();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${idToken}`\n      },\n      body: JSON.stringify({\n        emails,\n        workspaceId\n      })\n    };\n\n    const response = await fetch(`${process.env.API_SERVER}/invite`, {\n      ...options,\n      method: \"POST\"\n    });\n\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n\n    return response.json();\n  };\n\n  const addSingleCollaborator = async (\n    email: string,\n    workspaceId: string\n  ): Promise<Object> => addCollaborators([email], workspaceId);\n\n  const createWorkspace = async (\n    name: string\n  ): Promise<CreateWorkspaceResponse> => {\n    if (_.isNil(name)) {\n      throw new Error(\"Workspace name is required\");\n    }\n\n    const idToken = await getIdToken();\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${idToken}`\n      },\n      body: JSON.stringify({\n        name\n      })\n    };\n\n    const response = await fetch(`${process.env.API_SERVER}/workspace`, {\n      ...options,\n      method: \"POST\"\n    });\n\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n\n    return response.json();\n  };\n\n  return {\n    workspaces$,\n    workspaceForId$,\n    addCollaborators,\n    addSingleCollaborator,\n    createWorkspace\n  };\n};\n","import \"firebase/auth\";\n\nexport interface AuthenticationResponse {\n  refresh_token: string;\n  access_token: string;\n}\n\nexport default (db: any) => {\n  const authenticate = async (\n    username: string,\n    password: string,\n    refreshToken?: string\n  ): Promise<AuthenticationResponse> => {\n    const options = refreshToken\n      ? {\n          body: `refresh_token=${refreshToken}&grant_type=refresh_token`\n        }\n      : {\n          headers: {\n            Authorization: `Basic ${btoa(`${username}:${password}`)}`\n          }\n        };\n\n    const response = await fetch(`${process.env.API_SERVER}/authenticate`, {\n      ...options,\n      method: \"POST\"\n    });\n\n    if (!response.ok) {\n      return Promise.reject(\"The username or password is incorrect\");\n    }\n\n    return response.json();\n  };\n\n  const signup = async (\n    email: string,\n    password: string,\n    displayName: string\n  ): Promise<any> => {\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password,\n        displayName\n      })\n    };\n\n    const response = await fetch(`${process.env.API_SERVER}/signup`, {\n      ...options,\n      method: \"POST\"\n    });\n\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n\n    return response.json();\n  };\n\n  const isUser = async (email: string): Promise<string> => {\n    const response = await fetch(\n      `${process.env.API_SERVER}/validate?email=${email}`\n    );\n\n    if (!response.ok) {\n      return Promise.reject(response.statusText);\n    }\n\n    return response.text();\n  };\n\n  const login = async (\n    username: string,\n    password: string,\n    refreshToken: string\n  ): Promise<any> => {\n    const token = await authenticate(username, password, refreshToken);\n    // login to firebase\n\n    const results = await db.app\n      .auth()\n      .signInWithCustomToken(token.access_token);\n\n    return token;\n  };\n\n  return {\n    login,\n    authenticate,\n    signup,\n    isUser\n  };\n};\n","import firebase from \"firebase\";\nimport { Observable, Observer, from } from \"rxjs\";\n\nexport interface QueryResponse {\n  data: Object;\n  type: string;\n  id: string;\n}\n\nexport default (db: firebase.firestore.Firestore): Object => {\n  const activityRef = db.collection(\"activity\");\n\n  const userActivity$ = (uid: string) => {\n    return Observable.create((observer: Observer<QueryResponse>) => {\n      const unsubscribe = activityRef\n        .doc(uid)\n        .collection(\"seen\")\n        .onSnapshot(\n          querySnapshot => {\n            querySnapshot.docChanges().forEach(({ doc, type }) => {\n              observer.next({ data: doc.data(), type, id: doc.id });\n            });\n          },\n          err => observer.error(err)\n        );\n      return unsubscribe;\n    });\n  };\n\n  const createUserActivity$ = (uid: string, eventIds: Array<string>) => {\n    const batch = db.batch();\n\n    // create a batch record for everything\n    eventIds.forEach(docId => {\n      const record = {\n        [docId]: {\n          id: docId,\n          created: Date.now()\n        }\n      };\n\n      const seenActivityRef = activityRef\n        .doc(uid)\n        .collection(\"seen\")\n        .doc(docId);\n\n      batch.set(seenActivityRef, record);\n    });\n\n    // batch everything\n    return from(batch.commit());\n  };\n\n  return {\n    userActivity$,\n    createUserActivity$\n  };\n};\n","import { Observable } from \"rxjs\";\n\nexport default db => {\n  const invitesRef = db.collection(\"invites\");\n\n  const invitesForWorkspace$ = workspaceId => {\n    return Observable.create(observer => {\n      const unsubscribe = invitesRef\n        .where(\"workspaceId\", \"==\", workspaceId)\n        .where(\"status\", \"==\", \"pending\")\n        .onSnapshot(\n          querySnapshot => {\n            querySnapshot.docChanges().forEach(({ doc, type }) => {\n              const data = doc.data();\n              observer.next({ data, type, id: doc.id });\n            });\n          },\n          err => observer.err(err)\n        );\n\n      return unsubscribe;\n    });\n  };\n\n  const inviteForEmail$ = email => {\n    return Observable.create(observer => {\n      const unsubscribe = invitesRef.where(`email`, \"==\", email).onSnapshot(\n        querySnapshot => {\n          querySnapshot.docChanges().forEach(({ doc, type }) => {\n            const data = doc.data();\n            observer.next({ data, type });\n          });\n        },\n        err => {\n          observer.err(err);\n        }\n      );\n\n      return unsubscribe;\n    });\n  };\n\n  return {\n    invitesForWorkspace$,\n    inviteForEmail$\n  };\n};\n","import { initializeFirestore } from \"./firestore\";\n\nimport userFactory from \"./user\";\nimport commentsFactory from \"./comments\";\nimport workspaceFactory from \"./workspace\";\nimport authenticationFactory from \"./authentication\";\nimport activityFactory from \"./activity\";\nimport inviteFactory from \"./invites\";\n\nexport default () => {\n  const db$ = initializeFirestore();\n  const obs = {\n    user: userFactory(db$),\n    comments: commentsFactory(db$),\n    workspace: workspaceFactory(db$),\n    auth: authenticationFactory(db$),\n    activity: activityFactory(db$),\n    invites: inviteFactory(db$)\n  };\n\n  window.obs = obs;\n\n  return obs;\n};\n"],"names":["namespacedAction","name","asyncAction","actionType","REQUEST","SUCCESS","FAILED","FETCH_USER_PREFERENCES","RUN_REQUEST","LOGIN","CACHE_TOKEN","FETCH_CACHE_TOKEN","composeRemoteAction","action","source","dest","runRequest","type","types","fetchUserPreferences","hostname","pathname","payload","fetchUserPreferencesSuccess","preferences","fetchUserPreferencesFailed","error","cacheTokenRequest","token","cacheTokenFailed","cacheTokenSuccess","fetchCacheToken","fetchCacheTokenFailed","fetchCacheTokenSuccess","CONTENT_SCRIPT_PORT_NAME","CONTENT_SCRIPT_SOURCE_NAME","BACKGROUND_SCRIPT_PORT_NAME","MESSAGES_FRONTEND_SOURCE","MESSAGES_BACKGROUND_SOURCE","initializeFirestore","console","log","config","apiKey","process","env","FIREBASE_API_KEY","authDomain","FIREBASE_AUTH_DOMAIN","databaseURL","FIREBASE_DATABASE_URL","projectId","FIREBASE_PROJECT_ID","storageBucket","FIREBASE_STORAGE_BUCKET","messagingSenderId","FIREBASE_SENDER_ID","firebase","initializeApp","firestore","settings","timestampsInSnapshots","db","userRef","collection","user$","uid","Observable","create","observer","undefined","complete","unsubscribe","doc","onSnapshot","data","next","getUser","get","then","exists","catch","err","message","finally","normalizeUrl","require","getLocationURL","url","window","location","href","URL","eventsRef","commentsRef","where","comments$","workspaceId","subject","_","isNil","value","querySnapshot","empty","docChanges","forEach","id","uploadFile","file","storageRef","app","storage","ref","task","put","Promise","resolve","reject","on","progress","snapshot","getDownloadURL","downloadURL","addNewComment","comment","selector","uploadAttachment","Error","attachments","all","map","record","meta","userId","created","Date","now","hash","origin","port","protocol","search","newEvent","set","workspaceRef","workspaces$","workspaceForId$","queryResponse","getIdToken","user","auth","currentUser","idToken","addCollaborators","emails","isEmpty","options","method","headers","Authorization","body","JSON","stringify","response","fetch","API_SERVER","ok","statusText","json","addSingleCollaborator","email","createWorkspace","authenticate","username","password","refreshToken","btoa","signup","displayName","isUser","text","login","results","signInWithCustomToken","access_token","activityRef","userActivity$","createUserActivity$","eventIds","batch","docId","seenActivityRef","from","commit","invitesRef","invitesForWorkspace$","inviteForEmail$","db$","obs","userFactory","comments","commentsFactory","workspace","workspaceFactory","authenticationFactory","activity","activityFactory","invites","inviteFactory"],"mappings":"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"}