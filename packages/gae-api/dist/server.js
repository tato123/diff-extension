"use strict";

var _compression = _interopRequireDefault(require("compression"));

var _bodyParser = _interopRequireDefault(require("body-parser"));

var _express = _interopRequireDefault(require("express"));

var _logging = _interopRequireDefault(require("./logging"));

var _v = _interopRequireDefault(require("./api/v1"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const cors = require('cors');

if (process.env.ENV_ACTIVE !== 'yes') {
  throw new Error('Environment config not loaded');
} // setup express


const app = (0, _express.default)();
const port = process.env.PORT || 8080;
app.disable('etag');
app.set('trust proxy', true);
app.use(cors({
  origin: true
}));
app.use(_bodyParser.default.raw()); // parse application/x-www-form-urlencoded

app.use(_bodyParser.default.urlencoded({
  extended: false
})); // parse application/json

app.use(_bodyParser.default.json()); // parse plain text

app.use(_bodyParser.default.text()); // configure cors

app.use((0, _compression.default)());
app.use('/', _v.default);
app.use((err, req, res, next) => {
  if (res.headersSent) {
    return next(err);
  }

  _logging.default.error(err);

  res.send(500);
}); // Activate Google Cloud Trace and Debug when in production

if (process.env.NODE_ENV === 'production') {
  app.use(_logging.default.requestLogger);
}

app.listen(port, () => {
  _logging.default.info(`App listening on port ${port}!`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zZXJ2ZXIuanMiXSwibmFtZXMiOlsiY29ycyIsInJlcXVpcmUiLCJwcm9jZXNzIiwiZW52IiwiRU5WX0FDVElWRSIsIkVycm9yIiwiYXBwIiwicG9ydCIsIlBPUlQiLCJkaXNhYmxlIiwic2V0IiwidXNlIiwib3JpZ2luIiwiYm9keVBhcnNlciIsInJhdyIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJ0ZXh0Iiwicm91dGVzIiwiZXJyIiwicmVxIiwicmVzIiwibmV4dCIsImhlYWRlcnNTZW50IiwibG9nZ2luZyIsImVycm9yIiwic2VuZCIsIk5PREVfRU5WIiwicmVxdWVzdExvZ2dlciIsImxpc3RlbiIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUVBLElBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUFaLEtBQTJCLEtBQS9CLEVBQXNDO0FBQ3BDLFFBQU0sSUFBSUMsS0FBSixDQUFVLCtCQUFWLENBQU47QUFDRCxDLENBRUQ7OztBQUNBLE1BQU1DLEdBQUcsR0FBRyx1QkFBWjtBQUNBLE1BQU1DLElBQUksR0FBR0wsT0FBTyxDQUFDQyxHQUFSLENBQVlLLElBQVosSUFBb0IsSUFBakM7QUFFQUYsR0FBRyxDQUFDRyxPQUFKLENBQVksTUFBWjtBQUNBSCxHQUFHLENBQUNJLEdBQUosQ0FBUSxhQUFSLEVBQXVCLElBQXZCO0FBRUFKLEdBQUcsQ0FBQ0ssR0FBSixDQUNFWCxJQUFJLENBQUM7QUFDSFksRUFBQUEsTUFBTSxFQUFFO0FBREwsQ0FBRCxDQUROO0FBTUFOLEdBQUcsQ0FBQ0ssR0FBSixDQUFRRSxvQkFBV0MsR0FBWCxFQUFSLEUsQ0FFQTs7QUFDQVIsR0FBRyxDQUFDSyxHQUFKLENBQVFFLG9CQUFXRSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVIsRSxDQUNBOztBQUNBVixHQUFHLENBQUNLLEdBQUosQ0FBUUUsb0JBQVdJLElBQVgsRUFBUixFLENBQ0E7O0FBQ0FYLEdBQUcsQ0FBQ0ssR0FBSixDQUFRRSxvQkFBV0ssSUFBWCxFQUFSLEUsQ0FDQTs7QUFDQVosR0FBRyxDQUFDSyxHQUFKLENBQVEsMkJBQVI7QUFFQUwsR0FBRyxDQUFDSyxHQUFKLENBQVEsR0FBUixFQUFhUSxVQUFiO0FBRUFiLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLENBQUNTLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxHQUFYLEVBQWdCQyxJQUFoQixLQUF5QjtBQUMvQixNQUFJRCxHQUFHLENBQUNFLFdBQVIsRUFBcUI7QUFDbkIsV0FBT0QsSUFBSSxDQUFDSCxHQUFELENBQVg7QUFDRDs7QUFDREssbUJBQVFDLEtBQVIsQ0FBY04sR0FBZDs7QUFDQUUsRUFBQUEsR0FBRyxDQUFDSyxJQUFKLENBQVMsR0FBVDtBQUNELENBTkQsRSxDQVFBOztBQUNBLElBQUl6QixPQUFPLENBQUNDLEdBQVIsQ0FBWXlCLFFBQVosS0FBeUIsWUFBN0IsRUFBMkM7QUFDekN0QixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUWMsaUJBQVFJLGFBQWhCO0FBQ0Q7O0FBRUR2QixHQUFHLENBQUN3QixNQUFKLENBQVd2QixJQUFYLEVBQWlCLE1BQU07QUFDckJrQixtQkFBUU0sSUFBUixDQUFjLHlCQUF3QnhCLElBQUssR0FBM0M7QUFDRCxDQUZEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbXByZXNzaW9uIGZyb20gJ2NvbXByZXNzaW9uJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IGxvZ2dpbmcgZnJvbSAnLi9sb2dnaW5nJztcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9hcGkvdjEnO1xuXG5jb25zdCBjb3JzID0gcmVxdWlyZSgnY29ycycpO1xuXG5pZiAocHJvY2Vzcy5lbnYuRU5WX0FDVElWRSAhPT0gJ3llcycpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdFbnZpcm9ubWVudCBjb25maWcgbm90IGxvYWRlZCcpO1xufVxuXG4vLyBzZXR1cCBleHByZXNzXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBwb3J0ID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwO1xuXG5hcHAuZGlzYWJsZSgnZXRhZycpO1xuYXBwLnNldCgndHJ1c3QgcHJveHknLCB0cnVlKTtcblxuYXBwLnVzZShcbiAgY29ycyh7XG4gICAgb3JpZ2luOiB0cnVlXG4gIH0pXG4pO1xuXG5hcHAudXNlKGJvZHlQYXJzZXIucmF3KCkpO1xuXG4vLyBwYXJzZSBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbi8vIHBhcnNlIGFwcGxpY2F0aW9uL2pzb25cbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuLy8gcGFyc2UgcGxhaW4gdGV4dFxuYXBwLnVzZShib2R5UGFyc2VyLnRleHQoKSk7XG4vLyBjb25maWd1cmUgY29yc1xuYXBwLnVzZShjb21wcmVzc2lvbigpKTtcblxuYXBwLnVzZSgnLycsIHJvdXRlcyk7XG5cbmFwcC51c2UoKGVyciwgcmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKHJlcy5oZWFkZXJzU2VudCkge1xuICAgIHJldHVybiBuZXh0KGVycik7XG4gIH1cbiAgbG9nZ2luZy5lcnJvcihlcnIpO1xuICByZXMuc2VuZCg1MDApO1xufSk7XG5cbi8vIEFjdGl2YXRlIEdvb2dsZSBDbG91ZCBUcmFjZSBhbmQgRGVidWcgd2hlbiBpbiBwcm9kdWN0aW9uXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBhcHAudXNlKGxvZ2dpbmcucmVxdWVzdExvZ2dlcik7XG59XG5cbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBsb2dnaW5nLmluZm8oYEFwcCBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9IWApO1xufSk7XG4iXX0=